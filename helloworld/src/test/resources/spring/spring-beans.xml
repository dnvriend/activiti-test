<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-2.11.0.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-2.13.1.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000" />
        <property name="username" value="sa" />
        <property name="password" value="" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="databaseSchemaUpdate" value="true" />
        <!--+
            | Note: timers are only fired when the job or async executor is enabled
            | (i.e. jobExecutorActivate or asyncExecutorActivate needs to be set to true,
            | since the job and async executor are disabled by default).
            | see: online documentation p8.2.2: Timer Event Definitions
            +-->
        <property name="asyncExecutorEnabled" value="false"/>
        <property name="jobExecutorActivate" value="false" />
        <property name="historyLevel" value="FULL"/>
        <property name="eventListeners">
            <list>
                <bean id="camelProducerTemplateEventListener" class="com.github.dnvriend.activiti.event.CamelProducerTemplateEventListener">
                    <constructor-arg index="0" ref="producerTemplate" />
                </bean>
                <!--<bean id="loggingEventListener" class="com.github.dnvriend.activiti.event.LoggingEventListener" />-->
            </list>
        </property>
    </bean>

    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>

    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />

    <bean id="completeTaskAProcessor" class="com.github.dnvriend.camel.CompleteTaskProcessor">
        <constructor-arg index="0" ref="taskService" />
        <constructor-arg index="1" value="Task A" />
    </bean>

    <bean id="completeTaskBProcessor" class="com.github.dnvriend.camel.CompleteTaskProcessor">
        <constructor-arg index="0" ref="taskService" />
        <constructor-arg index="1" value="Task B" />
    </bean>

    <bean id="completeTaskCProcessor" class="com.github.dnvriend.camel.CompleteTaskProcessor">
        <constructor-arg index="0" ref="taskService" />
        <constructor-arg index="1" value="Task C" />
    </bean>

    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://boot2docker:61616" />
    </bean>

    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
        <property name="maxConnections" value="1" />
        <property name="connectionFactory" ref="jmsConnectionFactory" />
    </bean>

    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
        <property name="concurrentConsumers" value="1"/>
    </bean>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig"/>
    </bean>

    <!--+
        | Routes
        +-->
    <bean id="helloWorldRoute" class="com.github.dnvriend.camel.HelloWorldRoute"/>
    <bean id="followUpRoute" class="com.github.dnvriend.playround.followup.FollowUpRoutes"/>

    <!--+
        | see: http://camel.apache.org/spring.html
        | see: http://camel.apache.org/configuring-route-startup-ordering-and-autostartup.html
        +-->
    <camel:camelContext id="camelContext">
        <camel:template id="producerTemplate" />
        <camel:routeBuilder ref="helloWorldRoute" />
        <camel:routeBuilder ref="followUpRoute" />
    </camel:camelContext>
    

    

</beans>